@using Microsoft.AspNetCore.Identity
@using Gradebook.Data.Models
@using Gradebook.Common
@using Gradebook.Data.Models.Grades
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@model Gradebook.Web.ViewModels.Subject.SubjectViewModel
@{
    ViewData["Title"] = "Subjects List";
    var studentsCounter = 1;
    
    bool IsCurrentUserPrincipalOrAdmin()
    {
        var user = UserManager.GetUserAsync(User).GetAwaiter().GetResult();
        var roles = UserManager.GetRolesAsync(user).GetAwaiter().GetResult();
        return roles.Any(r => r == GlobalConstants.AdministratorRoleName || r == GlobalConstants.PrincipalRoleName);
    }
}

<h1>
    Here you will see subject details
    @if (IsCurrentUserPrincipalOrAdmin())
    {
        <a class="page-link-green" asp-area="Principal" asp-controller="Management" asp-action="EditSubject" asp-route-id="@Model.Id" title="Edit subject">
            <i class="fa fa-pencil-square-o" aria-hidden="true"></i>
        </a>
        <a class="page-link-red" asp-area="Principal" asp-controller="Management" asp-action="DeleteSubject" asp-route-id="@Model.Id" title="Delete subject">
            <i class="fa fa-trash-o" aria-hidden="true"></i>
        </a>
    }
</h1>

<h3>Name: @Model.Name</h3>
<h3>Grade: @Model.YearGrade</h3>
<h3>School Year: @Model.SchoolYear</h3>
<h3>Students Count: @Model.StudentSubjects.Count()</h3>
<h3>Teacher: @Model.TeacherFullName</h3>
<h3>School: @Model.TeacherSchoolName</h3>

<table class="table table-bordered">
    <thead>
    <tr>
        <th scope="col">Student number</th>
        <th scope="col">Student Name</th>
        <th scope="col">Term grades</th>
        <th scope="col">Final grade(s)</th>
    </tr>
    </thead>
    <tbody>
        @foreach (var studentSubject in @Model.StudentSubjects) //ToDo: Add logic for filtration by term
        {
            <tr>
                <th scope="row">@(studentsCounter++)</th>
                <td>
                    @studentSubject.StudentFullName
                </td>
                <td>
                    @{
                        var normalGrades = string.Join(" ", studentSubject.Grades.Where(g => g.Type == GradeType.Normal));
                    }
                    @normalGrades
                </td>
                <td>
                    @string.Join(" ", studentSubject.Grades.Where(g => g.Type == GradeType.Final))
                </td>
            </tr>
        }
    </tbody>
</table>